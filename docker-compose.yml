version: '3.8'

services:
  ollama:
    image: ollama/ollama
    container_name: ollama
    # Ollama by default listens on 11434
    ports:
      - "11434:11434" # Expose Ollama's port if you want to access it directly from your host
    volumes:
      - ollama_data:/root/.ollama # Persist Ollama models and data
    # Optional: If you have a GPU and want Ollama to use it (requires NVIDIA Container Toolkit)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]
    restart: always

  langchain_app:
    build:
      context: . # Build context is the root of your project
      dockerfile: Dockerfile # Specifies the Dockerfile to use
    container_name: fast_api_ollama_rag_app # Changed name for clarity
    ports:
      - "8000:8000"
    environment:
      # Pass your Hugging Face Token as an environment variable
      HF_TOKEN: ${HF_TOKEN} # Docker Compose will read this from your .env file
    volumes:
      # Mount your local project directory into the container's /app directory
      # This enables hot-reloading during development
      - .:/app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"] # --reload for development
    depends_on:
      # FastAPI app depends on Ollama if you plan to use Ollama for other things
      # or if you were using Ollama for LLM/Embeddings before.
      # For this specific HF API RAG, it's not strictly dependent for functionality,
      # but good to keep if Ollama is part of your broader stack.
      ollama:
        condition: service_started
    restart: always

volumes:
  ollama_data: # Define the named volume for Ollama data persistence
  chroma_db_data: # Define the named volume for Chrome data persistence (if needed)